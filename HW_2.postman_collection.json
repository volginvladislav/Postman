{
	"info": {
		"_postman_id": "0b0909e2-80bb-4df8-aa8d-f83e13a77fd1",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "N_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"name = Vlad\", function () {\r",
							"    pm.expect(jsonData.name).to.eql('Vlad');\r",
							"});\r",
							"\r",
							"pm.test(\"age = 25\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"25\")\r",
							"});\r",
							"\r",
							"pm.test(\"salary = 2000\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(2000)\r",
							"});\r",
							"\r",
							"let requestData = request.data\r",
							"pm.test(\"nameReq = Vlad\", function () {\r",
							"    pm.expect(requestData.name).to.eql('Vlad');\r",
							"});\r",
							"\r",
							"pm.test(\"ageReq = 25\"), function () {\r",
							"    pm.expect(requestData.age).to.eql(\"25\")\r",
							"}\r",
							"pm.test(\"salaryReq\"), function () {\r",
							"    pm.expect(requestData.salary).to.eql(2000)\r",
							"}\r",
							"let conFam = jsonData.family\r",
							"console.log(\"family =\" , conFam)\r",
							"\r",
							"pm.test(\"u_salary_1_5_year = salary * 4\") , function () {\r",
							"pm.expect(conFam.u_salary_1_5_year).to.eql(jsonData.salary * 4)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vlad",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "N_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2.Статус код 20\r",
							"pm.test(\"Status code = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"let jsonResp = pm.response.json();\r",
							"\r",
							"//4. Спарсить request\r",
							"let jsonReq = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"console.log(\"jsonReq =\", jsonReq)\r",
							"console.log(\"jsonResp =\", jsonResp)\r",
							"pm.test(\"name = reqName\", function () {\r",
							"    pm.expect(jsonResp.name).to.eql(jsonReq.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"nameResp = nameReq\", function () {\r",
							"    pm.expect(jsonResp.age).to.eql(jsonReq.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"let salaryReq = +jsonReq.salary\r",
							"pm.test(\"salaryResp = salaryReq\", function () {\r",
							"    pm.expect(jsonResp.salary).to.eql(salaryReq);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response\r",
							"let familyResp = jsonResp.family\r",
							"console.log(\"familyResp =\", familyResp)\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"dog has parameter name\", function () {\r",
							"    pm.expect(jsonResp.family.pets.dog).to.include.keys(\"name\");\r",
							"});\r",
							"pm.test(\"dog has parameter name\", function () {\r",
							"    pm.expect(jsonResp.family.pets.dog).to.haveOwnProperty(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"dog has parameter name\", function () {\r",
							"    pm.expect(jsonResp.family.pets.dog).to.have.any.keys(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"dogs name is Luky\", function () {\r",
							"    pm.expect(jsonResp.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"dogs age is 4\", function () {\r",
							"    pm.expect(jsonResp.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vlad&age=26&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vlad"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		}
	]
}